
LedProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000126  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000000d2  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000126  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000158  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000098  00000000  00000000  00000198  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b68  00000000  00000000  00000230  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000009d2  00000000  00000000  00000d98  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001013  00000000  00000000  0000176a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000d4  00000000  00000000  00002780  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0001042a  00000000  00000000  00002854  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000b1  00000000  00000000  00012c7e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000058  00000000  00000000  00012d2f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0000553b  00000000  00000000  00012d87  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	2d c0       	rjmp	.+90     	; 0x5c <__ctors_end>
   2:	00 00       	nop
   4:	40 c0       	rjmp	.+128    	; 0x86 <__vector_1>
   6:	00 00       	nop
   8:	39 c0       	rjmp	.+114    	; 0x7c <__bad_interrupt>
   a:	00 00       	nop
   c:	37 c0       	rjmp	.+110    	; 0x7c <__bad_interrupt>
   e:	00 00       	nop
  10:	35 c0       	rjmp	.+106    	; 0x7c <__bad_interrupt>
  12:	00 00       	nop
  14:	33 c0       	rjmp	.+102    	; 0x7c <__bad_interrupt>
  16:	00 00       	nop
  18:	31 c0       	rjmp	.+98     	; 0x7c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	2f c0       	rjmp	.+94     	; 0x7c <__bad_interrupt>
  1e:	00 00       	nop
  20:	2d c0       	rjmp	.+90     	; 0x7c <__bad_interrupt>
  22:	00 00       	nop
  24:	2b c0       	rjmp	.+86     	; 0x7c <__bad_interrupt>
  26:	00 00       	nop
  28:	29 c0       	rjmp	.+82     	; 0x7c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	27 c0       	rjmp	.+78     	; 0x7c <__bad_interrupt>
  2e:	00 00       	nop
  30:	25 c0       	rjmp	.+74     	; 0x7c <__bad_interrupt>
  32:	00 00       	nop
  34:	23 c0       	rjmp	.+70     	; 0x7c <__bad_interrupt>
  36:	00 00       	nop
  38:	21 c0       	rjmp	.+66     	; 0x7c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	1f c0       	rjmp	.+62     	; 0x7c <__bad_interrupt>
  3e:	00 00       	nop
  40:	1d c0       	rjmp	.+58     	; 0x7c <__bad_interrupt>
  42:	00 00       	nop
  44:	1b c0       	rjmp	.+54     	; 0x7c <__bad_interrupt>
  46:	00 00       	nop
  48:	19 c0       	rjmp	.+50     	; 0x7c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	17 c0       	rjmp	.+46     	; 0x7c <__bad_interrupt>
  4e:	00 00       	nop
  50:	15 c0       	rjmp	.+42     	; 0x7c <__bad_interrupt>
  52:	00 00       	nop
  54:	13 c0       	rjmp	.+38     	; 0x7c <__bad_interrupt>
  56:	00 00       	nop
  58:	11 c0       	rjmp	.+34     	; 0x7c <__bad_interrupt>
	...

0000005c <__ctors_end>:
  5c:	11 24       	eor	r1, r1
  5e:	1f be       	out	0x3f, r1	; 63
  60:	cf ef       	ldi	r28, 0xFF	; 255
  62:	d8 e0       	ldi	r29, 0x08	; 8
  64:	de bf       	out	0x3e, r29	; 62
  66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_clear_bss>:
  68:	21 e0       	ldi	r18, 0x01	; 1
  6a:	a0 e0       	ldi	r26, 0x00	; 0
  6c:	b1 e0       	ldi	r27, 0x01	; 1
  6e:	01 c0       	rjmp	.+2      	; 0x72 <.do_clear_bss_start>

00000070 <.do_clear_bss_loop>:
  70:	1d 92       	st	X+, r1

00000072 <.do_clear_bss_start>:
  72:	a0 30       	cpi	r26, 0x00	; 0
  74:	b2 07       	cpc	r27, r18
  76:	e1 f7       	brne	.-8      	; 0x70 <.do_clear_bss_loop>
  78:	19 d0       	rcall	.+50     	; 0xac <main>
  7a:	29 c0       	rjmp	.+82     	; 0xce <_exit>

0000007c <__bad_interrupt>:
  7c:	c1 cf       	rjmp	.-126    	; 0x0 <__vectors>

0000007e <sysclk_init>:
  7e:	8f ef       	ldi	r24, 0xFF	; 255
  80:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
  84:	08 95       	ret

00000086 <__vector_1>:
}

/************************************************************************/
/* The interrupt                                                        */
/************************************************************************/
ISR(INT0_vect){
  86:	1f 92       	push	r1
  88:	0f 92       	push	r0
  8a:	0f b6       	in	r0, 0x3f	; 63
  8c:	0f 92       	push	r0
  8e:	11 24       	eor	r1, r1
  90:	8f 93       	push	r24
  92:	9f 93       	push	r25
	PORTB ^= (1 << LED_PIN);
  94:	95 b1       	in	r25, 0x05	; 5
  96:	80 e2       	ldi	r24, 0x20	; 32
  98:	89 27       	eor	r24, r25
  9a:	85 b9       	out	0x05, r24	; 5

  9c:	9f 91       	pop	r25
  9e:	8f 91       	pop	r24
  a0:	0f 90       	pop	r0
  a2:	0f be       	out	0x3f, r0	; 63
  a4:	0f 90       	pop	r0
  a6:	1f 90       	pop	r1
  a8:	18 95       	reti

000000aa <board_init>:
  aa:	08 95       	ret

000000ac <main>:
#include <util/delay.h>
#include "Leds/LedFunctions.h"

int main (void)
{
	sysclk_init();
  ac:	e8 df       	rcall	.-48     	; 0x7e <sysclk_init>
	board_init();
  ae:	fd df       	rcall	.-6      	; 0xaa <board_init>
  b0:	25 9a       	sbi	0x04, 5	; 4
	//initBtns();
	
	DDRB |= (1 << PORTB5);
  b2:	90 e2       	ldi	r25, 0x20	; 32
	
	while (1)
	{
		_delay_ms(1000);
		PORTB ^= (1 << PORTB5);
  b4:	2f ef       	ldi	r18, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  b6:	33 ed       	ldi	r19, 0xD3	; 211
  b8:	80 e3       	ldi	r24, 0x30	; 48
  ba:	21 50       	subi	r18, 0x01	; 1
  bc:	30 40       	sbci	r19, 0x00	; 0
  be:	80 40       	sbci	r24, 0x00	; 0
  c0:	e1 f7       	brne	.-8      	; 0xba <main+0xe>
  c2:	00 c0       	rjmp	.+0      	; 0xc4 <main+0x18>
  c4:	00 00       	nop
  c6:	85 b1       	in	r24, 0x05	; 5
  c8:	89 27       	eor	r24, r25
  ca:	85 b9       	out	0x05, r24	; 5
  cc:	f3 cf       	rjmp	.-26     	; 0xb4 <main+0x8>

000000ce <_exit>:
  ce:	f8 94       	cli

000000d0 <__stop_program>:
  d0:	ff cf       	rjmp	.-2      	; 0xd0 <__stop_program>
