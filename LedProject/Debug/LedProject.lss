
LedProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000000e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000008c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000000e0  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000110  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  00000150  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000008ce  00000000  00000000  00000190  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007fa  00000000  00000000  00000a5e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000a5d  00000000  00000000  00001258  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000048  00000000  00000000  00001cb8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000fee2  00000000  00000000  00001d00  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000020  00000000  00000000  00011be2  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  00000391  00000000  00000000  00011c02  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	2d c0       	rjmp	.+90     	; 0x5c <__ctors_end>
   2:	00 00       	nop
   4:	3b c0       	rjmp	.+118    	; 0x7c <__bad_interrupt>
   6:	00 00       	nop
   8:	39 c0       	rjmp	.+114    	; 0x7c <__bad_interrupt>
   a:	00 00       	nop
   c:	37 c0       	rjmp	.+110    	; 0x7c <__bad_interrupt>
   e:	00 00       	nop
  10:	35 c0       	rjmp	.+106    	; 0x7c <__bad_interrupt>
  12:	00 00       	nop
  14:	33 c0       	rjmp	.+102    	; 0x7c <__bad_interrupt>
  16:	00 00       	nop
  18:	31 c0       	rjmp	.+98     	; 0x7c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	2f c0       	rjmp	.+94     	; 0x7c <__bad_interrupt>
  1e:	00 00       	nop
  20:	2d c0       	rjmp	.+90     	; 0x7c <__bad_interrupt>
  22:	00 00       	nop
  24:	2b c0       	rjmp	.+86     	; 0x7c <__bad_interrupt>
  26:	00 00       	nop
  28:	29 c0       	rjmp	.+82     	; 0x7c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	27 c0       	rjmp	.+78     	; 0x7c <__bad_interrupt>
  2e:	00 00       	nop
  30:	25 c0       	rjmp	.+74     	; 0x7c <__bad_interrupt>
  32:	00 00       	nop
  34:	23 c0       	rjmp	.+70     	; 0x7c <__bad_interrupt>
  36:	00 00       	nop
  38:	21 c0       	rjmp	.+66     	; 0x7c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	1f c0       	rjmp	.+62     	; 0x7c <__bad_interrupt>
  3e:	00 00       	nop
  40:	1d c0       	rjmp	.+58     	; 0x7c <__bad_interrupt>
  42:	00 00       	nop
  44:	1b c0       	rjmp	.+54     	; 0x7c <__bad_interrupt>
  46:	00 00       	nop
  48:	19 c0       	rjmp	.+50     	; 0x7c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	17 c0       	rjmp	.+46     	; 0x7c <__bad_interrupt>
  4e:	00 00       	nop
  50:	15 c0       	rjmp	.+42     	; 0x7c <__bad_interrupt>
  52:	00 00       	nop
  54:	13 c0       	rjmp	.+38     	; 0x7c <__bad_interrupt>
  56:	00 00       	nop
  58:	11 c0       	rjmp	.+34     	; 0x7c <__bad_interrupt>
	...

0000005c <__ctors_end>:
  5c:	11 24       	eor	r1, r1
  5e:	1f be       	out	0x3f, r1	; 63
  60:	cf ef       	ldi	r28, 0xFF	; 255
  62:	d8 e0       	ldi	r29, 0x08	; 8
  64:	de bf       	out	0x3e, r29	; 62
  66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_clear_bss>:
  68:	21 e0       	ldi	r18, 0x01	; 1
  6a:	a0 e0       	ldi	r26, 0x00	; 0
  6c:	b1 e0       	ldi	r27, 0x01	; 1
  6e:	01 c0       	rjmp	.+2      	; 0x72 <.do_clear_bss_start>

00000070 <.do_clear_bss_loop>:
  70:	1d 92       	st	X+, r1

00000072 <.do_clear_bss_start>:
  72:	a0 30       	cpi	r26, 0x00	; 0
  74:	b2 07       	cpc	r27, r18
  76:	e1 f7       	brne	.-8      	; 0x70 <.do_clear_bss_loop>
  78:	03 d0       	rcall	.+6      	; 0x80 <main>
  7a:	06 c0       	rjmp	.+12     	; 0x88 <_exit>

0000007c <__bad_interrupt>:
  7c:	c1 cf       	rjmp	.-126    	; 0x0 <__vectors>

0000007e <board_init>:
#include <asf.h>
#include <board.h>
#include <conf_board.h>

void board_init(void)
{
  7e:	08 95       	ret

00000080 <main>:

int main (void)
{
	/* Insert system clock initialization code here (sysclk_init()). */

	board_init();
  80:	fe df       	rcall	.-4      	; 0x7e <board_init>

	/* Insert application code here, after the board has been initialized. */
}
  82:	80 e0       	ldi	r24, 0x00	; 0
  84:	90 e0       	ldi	r25, 0x00	; 0
  86:	08 95       	ret

00000088 <_exit>:
  88:	f8 94       	cli

0000008a <__stop_program>:
  8a:	ff cf       	rjmp	.-2      	; 0x8a <__stop_program>
